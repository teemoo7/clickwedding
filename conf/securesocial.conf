#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################

securesocial {
	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that led the use to the login page
	#
	onLoginGoTo=/

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/

	#
	# Enable SSL for oauth callback urls and login/signup/password recovery pages
	#
	ssl=false


    cookie {
        #name=id
        #path=/
        #domain=some_domain
        #httpOnly=true
        #idleTimeoutInMinutes=30
        #absoluteTimeOutInMinutes=720
    }

	twitter {
		requestTokenUrl="https://twitter.com/oauth/request_token"
		accessTokenUrl="https://twitter.com/oauth/access_token"
		authorizationUrl="https://twitter.com/oauth/authenticate"
		consumerKey=removed
		consumerSecret=removed
	}

	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId=removed
		clientSecret=removed
		# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
		scope=email
	}

	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId="removed"
		clientSecret="removed"
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}

    userpass {
        withUserNameSupport=false
        sendWelcomeEmail=false
        enableGravatarSupport=true
        signupSkipLogin=true
        tokenDuration=60
        tokenDeleteInterval=5
        minimumPasswordLength=8
        enableTokenJob=true
        hasher=bcrypt
    }
}
